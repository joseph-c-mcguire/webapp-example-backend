data_path: 'data/predictive_maintenance.csv'
model_directory: 'models/'
## We'll drop Failure Type as it's likely not going to be available to us at prediction time, so it's somewhat of a data leakage issue.
columns_to_drop: ['Product ID', "Target"]
columns_to_scale: ['Air temperature [K]', 'Process temperature [K]', 'Rotational speed [rpm]', 'Torque [Nm]', 'Tool wear [min]']
columns_to_encode: ['Type']
target_column: ['Failure Type']
param_grids: {
    'Decision Tree': {
        'max_depth': [null, 10, 20, 30]
    },
    'Random Forest': {
        'n_estimators': [100, 200],
        'max_depth': [10, 20]
    },
    'Gradient Boosting': {
        'n_estimators': [100, 200],
        'learning_rate': [0.01, 0.1]
    },
}
models: {
    'Decision Tree': {
        import_module: 'sklearn.tree',
        model_name: 'DecisionTreeClassifier',
        model_params: {'random_state': 42}
    },
    'Random Forest': {
        import_module: 'sklearn.ensemble',
        model_name: 'RandomForestClassifier',
        model_params: {'random_state': 42}
    },
    'Gradient Boosting': {
        import_module: 'sklearn.ensemble',
        model_name: 'GradientBoostingClassifier',
        model_params: {'random_state': 42}
    },
}
train_test_split: {
    "test_size": 0.2,
    "random_state": 42
}